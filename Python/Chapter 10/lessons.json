[
    {
        "type": "learn",
        "con": [
            {"title": "Introduction to Python Operators"},
            {"para": "Operators in Python are special symbols or keywords used to perform operations on variables and values. Python supports a variety of operators that allow you to manipulate data efficiently."},
            {"para": "In this series, we'll explore different categories of operators, starting with Arithmetic Operators."}
        ]
    },
    {
        "type": "learn",
        "con": [
            {"title": "Arithmetic Operators"},
            {"para": "Arithmetic operators are used to perform mathematical operations like addition, subtraction, multiplication, and more."},
            {"list": [
                "+ : Addition (e.g., 5 + 3 = 8)",
                "- : Subtraction (e.g., 5 - 3 = 2)",
                "* : Multiplication (e.g., 5 * 3 = 15)",
                "/ : Division (e.g., 5 / 2 = 2.5)",
                "% : Modulus (e.g., 5 % 2 = 1)",
                "** : Exponentiation (e.g., 2 ** 3 = 8)",
                "// : Floor Division (e.g., 5 // 2 = 2)"
            ]},
            {"snippet": [
                "python",
                "a = 10\nb = 3\nprint(a + b)  # Output: 13\nprint(a % b)  # Output: 1\nprint(a ** 2) # Output: 100"
            ]}
        ]
    },
    {
        "type": "mcq",
        "con": {
            "ques": "What is the result of 7 // 2 in Python?",
            "op": [
                "3",
                "3.5",
                "4",
                "2"
            ]
        }
    },
    {
        "type": "learn",
        "con": [
            {"title": "Assignment Operators"},
            {"para": "Assignment operators are used to assign values to variables. They can also perform an operation and assign the result in one step."},
            {"list": [
                "= : Assigns value (e.g., x = 5)",
                "+= : Adds and assigns (e.g., x += 3 is x = x + 3)",
                "-= : Subtracts and assigns",
                "*= : Multiplies and assigns",
                "/= : Divides and assigns"
            ]},
            {"snippet": [
                "python",
                "x = 5\nx += 2  # x is now 7\nx *= 3  # x is now 21\nprint(x)"
            ]}
        ]
    },
    {
        "type": "mcq",
        "con": {
            "ques": "After executing 'x = 10; x -= 4', what is the value of x?",
            "op": [
                "6",
                "14",
                "4",
                "10"
            ]
        }
    },
    {
        "type": "learn",
        "con": [
            {"title": "Comparison Operators"},
            {"para": "Comparison operators compare two values and return a Boolean result (True or False)."},
            {"list": [
                "== : Equal to",
                "!= : Not equal to",
                "> : Greater than",
                "< : Less than",
                ">= : Greater than or equal to",
                "<= : Less than or equal to"
            ]},
            {"snippet": [
                "python",
                "a = 5\nb = 3\nprint(a > b)  # True\nprint(a == b) # False"
            ]}
        ]
    },
    {
        "type": "mcq",
        "con": {
            "ques": "What does '5 != 5' evaluate to in Python?",
            "op": [
                "False",
                "True",
                "5",
                "None"
            ]
        }
    },
    {
        "type": "learn",
        "con": [
            {"title": "Logical Operators"},
            {"para": "Logical operators are used to combine conditional statements, returning True or False."},
            {"list": [
                "and : Returns True if both statements are true",
                "or : Returns True if at least one statement is true",
                "not : Reverses the result"
            ]},
            {"snippet": [
                "python",
                "a = True\nb = False\nprint(a and b) # False\nprint(a or b)  # True\nprint(not a)   # False"
            ]}
        ]
    },
    {
        "type": "mcq",
        "con": {
            "ques": "What is the result of 'not (True or False)'?",
            "op": [
                "False",
                "True",
                "None",
                "Error"
            ]
        }
    },
    {
        "type": "learn",
        "con": [
            {"title": "Identity Operators"},
            {"para": "Identity operators check if two objects are the same in memory, not just equal in value."},
            {"list": [
                "is : Returns True if both variables point to the same object",
                "is not : Returns True if they are different objects"
            ]},
            {"snippet": [
                "python",
                "a = [1, 2]\nb = a\nc = [1, 2]\nprint(a is b)     # True\nprint(a is c)     # False\nprint(a == c)     # True"
            ]}
        ]
    },
    {
        "type": "mcq",
        "con": {
            "ques": "If 'a = 5' and 'b = 5', what does 'a is b' return?",
            "op": [
                "True",
                "False",
                "5",
                "None"
            ]
        }
    },
    {
        "type": "learn",
        "con": [
            {"title": "Membership Operators"},
            {"para": "Membership operators test if a value is present in a sequence (like lists, strings, etc.)."},
            {"list": [
                "in : Returns True if value is found in the sequence",
                "not in : Returns True if value is not found"
            ]},
            {"snippet": [
                "python",
                "x = 'hello'\nprint('h' in x)      # True\nprint('z' not in x)  # True"
            ]}
        ]
    },
    {
        "type": "mcq",
        "con": {
            "ques": "What does '3 in [1, 2, 3, 4]' evaluate to?",
            "op": [
                "True",
                "False",
                "3",
                "Error"
            ]
        }
    },
    {
        "type": "learn",
        "con": [
            {"title": "Bitwise Operators"},
            {"para": "Bitwise operators work on bits and perform operations on binary representations of integers."},
            {"list": [
                "& : Bitwise AND",
                "| : Bitwise OR",
                "^ : Bitwise XOR",
                "~ : Bitwise NOT",
                ">> : Right shift",
                "<< : Left shift"
            ]},
            {"snippet": [
                "python",
                "a = 5  # Binary: 0101\nb = 3  # Binary: 0011\nprint(a & b)  # 1 (0001)\nprint(a | b)  # 7 (0111)"
            ]}
        ]
    }
]