[
    {
        "type": "learn",
        "con": [
            {"title": "Python Variables"},
            {"para": "Variables are containers for storing data values."},
            {"para": "Unlike other programming languages, Python has no command for declaring a variable."},
            {"para": "A variable is created the moment you first assign a value to it."},
            {"snippet": [
                "python",
                "x = 5\ny = 'Hello, World!'"
            ]},
            {"para": "Variables do not need to be declared with any particular type, and can even change type after they have been set."},
            {"snippet": [
                "python",
                "x = 4 # x is of type int\nx = 'Sally' # x is now of type str"
            ]}
        ]
    },
    {
        "type": "learn",
        "con": [
            {"title": "Casting"},
            {"para": "If you want to specify the data type of a variable, this can be done with casting."},
            {"para": "Python is an object-orientated language, and as such it uses classes to define data types, including its primitive types."},
            {"para": "Casting in python is therefore done using constructor functions:"},
            {"snippet": [
                "python",
                "x = str(3) # x will be '3'\ny = int(3) # y will be 3\nz = float(3) # z will be 3.0"
            ]},
            {"para": "You can also specify a variable type using the following functions:"},
            {"snippet": [
                "python",
                "x = str('Hello, World!')\ny = int(20)\nz = float(20.5)"
            ]}
        ]
    },{
        "type": "learn",
        "con": [
            {"title": "Get the Type"},
            {"para": "You can get the data type of a variable with the ```type()``` function."},
            {"para": "Python has many data types, but here are some of the most common ones:"},
            {"list": [
                "str - String",
                "int - Integer",
                "float - Float",
                "complex - Complex"
            ]},
            {"snippet": [
                "python",
                "x = 'Hello, World!'\ny = 20\nz = 20.5\na = 1j"
            ]},
            {"para": "To verify the type of any object in Python, use the ```type()``` function:"},
            {"snippet": [
                "python",
                "print(type(x))\nprint(type(y))\nprint(type(z))\nprint(type(a))"
            ]},
            {"note": "You will learn more about *data types* and *casting* later in this tutorial."}
        ]
    },
    {
        "type": "learn",
        "con": [
            {"title": "Single or Double Quotes?"},
            {"para": "String variables can be declared either by using single or double quotes:"},
            {"snippet": [
                "python",
                "x = 'John'\n# is the same as\nx = \"John\""
            ]},
            {"para": "String with double quotes and single quotes are the same."},
            {"para": "You can display a string literal with the ```print()``` function:"},
            {"snippet": [
                "python",
                "print('Hello')\nprint(\"Hello\")"
            ]}
        ]
    },
    {
        "type": "learn",
        "con": [
            {"title": "Case-Sensitive"},
            {"para": "Variable names are case-sensitive."},
            {"para": "This means that the variables ```myvar```, ```MyVar```, and ```myVar``` are treated as different variables."},
            {"snippet": [
                "python",
                "a = 4\nA = 'Sally'\n#A will not overwrite a"
            ]}
        ]
    }
]